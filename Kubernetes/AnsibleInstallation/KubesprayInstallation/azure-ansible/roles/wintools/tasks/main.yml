- name: Get whoami information
  win_whoami:

- name: Ensure 7-Zip is installed via Chocolatey
  win_chocolatey:
    name: 7zip
    state: present

- name: Run a powershell
  win_shell: |
    New-Item -Path C:\temp -ItemType Directory
    $path_info = Get-Item -Path C:\temp
    $path_info.FullName
  args:
    chdir: C:\
    executable: powershell





















# bunun için öncelikle opessh kurulmalı
# https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse

# daha sonra docker kurulmalı : 
# https://docs.microsoft.com/en-us/virtualization/windowscontainers/deploy-containers/deploy-containers-on-server



# Get-WindowsCapability -Online | ? Name -like 'OpenSSH*'

# # This should return the following output:

# Name  : OpenSSH.Client~~~~0.0.1.0
# State : NotPresent
# Name  : OpenSSH.Server~~~~0.0.1.0
# State : NotPresent

# # Install the OpenSSH Client
# Add-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0

# # Install the OpenSSH Server
# Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0

# # Both of these should return the following output:

# Path          :
# Online        : True
# RestartNeeded : False



# known_hosts ve authorization_keys için

#Note that if you are setting up keys for an administrator user, 
#putting the public key to %USERPROFILE%/.ssh/authorized_keys will not work. 
#You must append the public key to %PROGRAMDATA%/ssh/administrators_authorized_keys instead.


#%WINDIR%\System32\OpenSSH

# https://www.youtube.com/watch?v=XCtdkr6FfLU
# https://www.youtube.com/watch?v=Cs3wBl_mMH0

# https://www.concurrency.com/blog/may-2019/key-based-authentication-for-openssh-on-windows

# https://winscp.net/eng/docs/guide_windows_openssh_server#key_authentication

# https://serverpilot.io/docs/how-to-use-ssh-public-key-authentication/


# problemler için

# https://stackoverflow.com/questions/1556056/permission-denied-publickey-keyboard-interactive

